<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zknu.shop.common.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.zknu.shop.common.pojo.Product" >
    <id column="product_id" property="productId" jdbcType="BIGINT" />
    <result column="product_no" property="productNo" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_seller_id" property="productSellerId" jdbcType="BIGINT" />
    <result column="product_price" property="productPrice" jdbcType="DOUBLE" />
    <result column="product_stock" property="productStock" jdbcType="INTEGER" />
    <result column="product_taste" property="productTaste" jdbcType="CHAR" />
    <result column="product_is_sell" property="productIsSell" jdbcType="CHAR" />
    <result column="product_description" property="productDescription" jdbcType="VARCHAR" />
    <result column="product_picture" property="productPicture" jdbcType="VARCHAR" />
    <result column="product_hass_selled" property="productHassSelled" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    product_id, product_no, product_name, product_seller_id, product_price, product_stock, 
    product_taste, product_is_sell, product_description, product_picture, product_hass_selled
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zknu.shop.common.pojo.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from product
    where product_id = #{productId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from product
    where product_id = #{productId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zknu.shop.common.pojo.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zknu.shop.common.pojo.Product" >
    insert into product (product_id, product_no, product_name, 
      product_seller_id, product_price, product_stock, 
      product_taste, product_is_sell, product_description, 
      product_picture, product_hass_selled)
    values (#{productId,jdbcType=BIGINT}, #{productNo,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{productSellerId,jdbcType=BIGINT}, #{productPrice,jdbcType=DOUBLE}, #{productStock,jdbcType=INTEGER}, 
      #{productTaste,jdbcType=CHAR}, #{productIsSell,jdbcType=CHAR}, #{productDescription,jdbcType=VARCHAR}, 
      #{productPicture,jdbcType=VARCHAR}, #{productHassSelled,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zknu.shop.common.pojo.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productNo != null" >
        product_no,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productSellerId != null" >
        product_seller_id,
      </if>
      <if test="productPrice != null" >
        product_price,
      </if>
      <if test="productStock != null" >
        product_stock,
      </if>
      <if test="productTaste != null" >
        product_taste,
      </if>
      <if test="productIsSell != null" >
        product_is_sell,
      </if>
      <if test="productDescription != null" >
        product_description,
      </if>
      <if test="productPicture != null" >
        product_picture,
      </if>
      <if test="productHassSelled != null" >
        product_hass_selled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="productNo != null" >
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productSellerId != null" >
        #{productSellerId,jdbcType=BIGINT},
      </if>
      <if test="productPrice != null" >
        #{productPrice,jdbcType=DOUBLE},
      </if>
      <if test="productStock != null" >
        #{productStock,jdbcType=INTEGER},
      </if>
      <if test="productTaste != null" >
        #{productTaste,jdbcType=CHAR},
      </if>
      <if test="productIsSell != null" >
        #{productIsSell,jdbcType=CHAR},
      </if>
      <if test="productDescription != null" >
        #{productDescription,jdbcType=VARCHAR},
      </if>
      <if test="productPicture != null" >
        #{productPicture,jdbcType=VARCHAR},
      </if>
      <if test="productHassSelled != null" >
        #{productHassSelled,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zknu.shop.common.pojo.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.productNo != null" >
        product_no = #{record.productNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productSellerId != null" >
        product_seller_id = #{record.productSellerId,jdbcType=BIGINT},
      </if>
      <if test="record.productPrice != null" >
        product_price = #{record.productPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.productStock != null" >
        product_stock = #{record.productStock,jdbcType=INTEGER},
      </if>
      <if test="record.productTaste != null" >
        product_taste = #{record.productTaste,jdbcType=CHAR},
      </if>
      <if test="record.productIsSell != null" >
        product_is_sell = #{record.productIsSell,jdbcType=CHAR},
      </if>
      <if test="record.productDescription != null" >
        product_description = #{record.productDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.productPicture != null" >
        product_picture = #{record.productPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.productHassSelled != null" >
        product_hass_selled = #{record.productHassSelled,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set product_id = #{record.productId,jdbcType=BIGINT},
      product_no = #{record.productNo,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_seller_id = #{record.productSellerId,jdbcType=BIGINT},
      product_price = #{record.productPrice,jdbcType=DOUBLE},
      product_stock = #{record.productStock,jdbcType=INTEGER},
      product_taste = #{record.productTaste,jdbcType=CHAR},
      product_is_sell = #{record.productIsSell,jdbcType=CHAR},
      product_description = #{record.productDescription,jdbcType=VARCHAR},
      product_picture = #{record.productPicture,jdbcType=VARCHAR},
      product_hass_selled = #{record.productHassSelled,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zknu.shop.common.pojo.Product" >
    update product
    <set >
      <if test="productNo != null" >
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productSellerId != null" >
        product_seller_id = #{productSellerId,jdbcType=BIGINT},
      </if>
      <if test="productPrice != null" >
        product_price = #{productPrice,jdbcType=DOUBLE},
      </if>
      <if test="productStock != null" >
        product_stock = #{productStock,jdbcType=INTEGER},
      </if>
      <if test="productTaste != null" >
        product_taste = #{productTaste,jdbcType=CHAR},
      </if>
      <if test="productIsSell != null" >
        product_is_sell = #{productIsSell,jdbcType=CHAR},
      </if>
      <if test="productDescription != null" >
        product_description = #{productDescription,jdbcType=VARCHAR},
      </if>
      <if test="productPicture != null" >
        product_picture = #{productPicture,jdbcType=VARCHAR},
      </if>
      <if test="productHassSelled != null" >
        product_hass_selled = #{productHassSelled,jdbcType=INTEGER},
      </if>
    </set>
    where product_id = #{productId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zknu.shop.common.pojo.Product" >
    update product
    set product_no = #{productNo,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_seller_id = #{productSellerId,jdbcType=BIGINT},
      product_price = #{productPrice,jdbcType=DOUBLE},
      product_stock = #{productStock,jdbcType=INTEGER},
      product_taste = #{productTaste,jdbcType=CHAR},
      product_is_sell = #{productIsSell,jdbcType=CHAR},
      product_description = #{productDescription,jdbcType=VARCHAR},
      product_picture = #{productPicture,jdbcType=VARCHAR},
      product_hass_selled = #{productHassSelled,jdbcType=INTEGER}
    where product_id = #{productId,jdbcType=BIGINT}
  </update>
</mapper>